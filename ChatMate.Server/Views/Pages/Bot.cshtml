@using ChatMate.Abstractions.Model
@model BotViewModelWithOptions
@{
    Layout = "_Layout";
    ViewBag.Title = "Bots";
}

<div class="container">
    <form method="post" asp-action="bot">
        <h3>Storage</h3>
        
        <div class="form-group">
            <label asp-for="Bot.Id">Id:</label>
            <input asp-for="Bot.Id" class="form-control" readonly="readonly" />
            @Html.ValidationMessageFor(m => m.Bot.Id)
        </div>
        
        <h3>General</h3>

        <div class="form-group">
            <label asp-for="Bot.Name">Bot.Name:</label>
            <input asp-for="Bot.Name" class="form-control"/>
            @Html.ValidationMessageFor(m => m.Bot.Name)
        </div>
        
        <div class="form-group">
            <label asp-for="Bot.Description">Bot.Description:</label>
            <input asp-for="Bot.Description" class="form-control"/>
            @Html.ValidationMessageFor(m => m.Bot.Description)
        </div>
        
        <h3>Prompt</h3>

        <div class="form-group">
            <label asp-for="Bot.Preamble">Bot.Preamble:</label>
            <textarea asp-for="Bot.Preamble" class="form-control"></textarea>
            @Html.ValidationMessageFor(m => m.Bot.Preamble)
        </div>

        <div class="form-group">
            <label asp-for="Bot.Postamble">Bot.Postamble:</label>
            <textarea asp-for="Bot.Postamble" class="form-control"></textarea>
            @Html.ValidationMessageFor(m => m.Bot.Postamble)
        </div>

        <div class="form-group">
            <label asp-for="Bot.Greeting">Bot.Greeting:</label>
            <input asp-for="Bot.Greeting" class="form-control"/>
            @Html.ValidationMessageFor(m => m.Bot.Greeting)
        </div>

        <h3>Text Generation</h3>

        <div class="form-group">
            <label asp-for="Bot.Services.TextGen.Service">Bot.Services.TextGen.Service:</label>
            <select asp-for="Bot.Services.TextGen.Service" asp-items="@(new SelectList(Model.TextGenServices))" class="form-control"></select>
            @Html.ValidationMessageFor(m => m.Bot.Services.TextGen.Service)
        </div>

        <h3>Text To Speech</h3>

        <div class="form-group">
            <label asp-for="Bot.Services.SpeechGen.Service">Bot.Services.SpeechGen.Service:</label>
            <select asp-for="Bot.Services.SpeechGen.Service" asp-items="@(new SelectList(Model.TextToSpeechServices))" class="form-control"></select>
            @Html.ValidationMessageFor(m => m.Bot.Services.SpeechGen.Service)
        </div>

        <div class="form-group">
            <label asp-for="Bot.Services.SpeechGen.Voice">Bot.Services.SpeechGen.Voice:</label>
            <select asp-for="Bot.Services.SpeechGen.Voice" asp-items="@(new SelectList(Model.Voices, nameof(VoiceInfo.Id), nameof(VoiceInfo.Label)))" class="form-control"></select>
            @Html.ValidationMessageFor(m => m.Bot.Services.SpeechGen.Voice)
        </div>

        <script type="text/javascript">
            document.getElementById("Bot_Services_SpeechGen_Service").onchange = function() {
                const selectedService = this.value;

                fetch('/tts/services/' + selectedService + '/voices')
                    .then(response => response.json())
                    .then(data => {
                        const voicesSelect = document.getElementById("Bot_Services_SpeechGen_Voice");
                        voicesSelect.innerHTML = ""; // Clear existing options

                        data.forEach(function(voice) {
                            const option = document.createElement("option");
                            option.value = voice.id;
                            option.text = voice.label;
                            voicesSelect.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error:', error));
            };
        </script>

        <h3>Options</h3>

        <div class="form-group">
            <label asp-for="Bot.Options!.EnableThinkingSpeech">EnableThinkingSpeech:</label>
            <input asp-for="Bot.Options!.EnableThinkingSpeech" type="checkbox"/>
            @Html.ValidationMessageFor(m => m.Bot.Options!.EnableThinkingSpeech)
        </div>

        <br/>
        <button type="submit" class="btn btn-primary">Save</button>
        @Html.ValidationSummary(true)
    </form>
</div>