@page

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>ChatMate</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-dark-5@1.1.3/dist/css/bootstrap-dark.min.css" rel="stylesheet">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            padding: 10px;
            display: flex;
            flex-direction: column;
        }
        #app {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        .container {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 0;
        }
        .chat-container {
            overflow-y: auto;
            flex: 1;
            padding: 10px;
        }
        .user-msg, .bot-msg {
            margin: 5px 0;
            padding: 10px;
            border-radius: 5px;
        }
        .user-msg {
            background-color: #384750;
        }
        .bot-msg {
            background-color: #5a5151;
        }
    </style>
</head>
<body class="bg-dark text-white d-flex flex-column">
    <div id="app" class="flex-grow-1"></div>

    <script type="module">
        import { createSignal, onMount, For } from "https://cdn.skypack.dev/solid-js";
        import { render } from "https://cdn.skypack.dev/solid-js/web";
        import html from "https://cdn.skypack.dev/solid-js/html";
        
        const Chat = ({ messages }) => {
            return () => html`
                <div class="chat-container">
                    <${For} each=${messages} fallback=${html`<p class="text-center text-secondary">Welcome to ChatMate!</p>`}>
                        ${msg => html`
                            <div class="${msg.type === 'Reply' ? 'bot-msg' : 'user-msg text-end'}">
                                ${msg.content}
                            </div>
                        `}
                    <//>
                </div>
            `;
        }
        
        const MessageInput = ({ onSend }) => {
            let inputRef;
        
            function sendMsg() {
                if (inputRef.value) {
                    onSend(inputRef.value);
                    inputRef.value = '';
                }
            }
        
            function onKeyPress(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    sendMsg();
                }
            }
        
            return () => html`
                <div class="input-group mt-3">
                    <input type="text"
                           class="form-control"
                           placeholder="Type your message here"
                           onKeyPress=${onKeyPress}
                           ref=${el => {
                               inputRef = el;
                           }}/>
                    <button class="btn btn-primary" onClick=${sendMsg}>Send</button>
                </div>
            `;
        }
        
        const App = () => {
            const [messages, setMessages] = createSignal([]);
        
            let socket;
        
            onMount(() => {
                socket = new WebSocket('ws://127.0.0.1:5384/ws');
        
                socket.onmessage = function(event) {
                    const data = JSON.parse(event.data);
                    if (data.Type === 'Reply' || data.Type === 'Send') {
                        setMessages(oldMessages => [...oldMessages, { type: data.Type, content: data.Content }]);
                    } else if (data.Type === 'Speech') {
                        const audio = new Audio(data.Content);
                        audio.play();
                    }
                };
            });
        
            function onSend(content) {
                const msg = JSON.stringify({ "Type": "Send", "Content": content });
                socket.send(msg);
                setMessages(oldMessages => [...oldMessages, { type: "Send", content: content }]);
            }
        
            return () => html`
                <div class="container px-0">
                    <${Chat} messages=${messages()} />
                    <${MessageInput} onSend=${onSend} />
                </div>
            `;
        }

        render(() => html`<${App} />`, document.getElementById("app"));
    </script>
</body>
</html>
