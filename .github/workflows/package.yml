name: Package

on:
  push:
    tags:
      - v*

jobs:

  server:
    name: Package Server
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get the version
      id: get_version 
      run: |
        $version = $env:GITHUB_REF -replace "refs/tags/", ""
        $version = $version.Substring(1)
        Add-Content -Path $env:GITHUB_OUTPUT -Value "VERSION=$version"
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore
      run: |
        dotnet restore --runtime win-x64 src/server/Voxta.Server/Voxta.Server.csproj
        dotnet restore --runtime win-x64 src/desktop/Voxta.DesktopApp/Voxta.DesktopApp.csproj
    - name: Build
      run: |
        dotnet build -c Release -p:Version=${{ steps.get_version.outputs.VERSION }} --no-restore src/server/Voxta.Server/Voxta.Server.csproj
        dotnet build -c Release -p:Version=${{ steps.get_version.outputs.VERSION }} --no-restore src/desktop/Voxta.DesktopApp/Voxta.DesktopApp.csproj
    - name: Publish
      run: |
        dotnet publish -c Release --no-build --no-restore --output ./publish/server src/server/Voxta.Server/Voxta.Server.csproj
        dotnet publish -c Release --no-build --no-restore --output ./publish/desktop src/desktop/Voxta.DesktopApp/Voxta.DesktopApp.csproj
    - name: Merge
      run: |
        robocopy ./publish/desktop/ ./publish/server/ /E /XC /XN /XO || exit 0
    - name: Zip
      run: |
        cd publish/server
        Compress-Archive -Path .\* -DestinationPath ".\Voxta.Server.v${{ steps.get_version.outputs.VERSION }}.zip"
    - name: GitHub release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: |
          publish/server/Voxta.Server.v${{ steps.get_version.outputs.VERSION }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}