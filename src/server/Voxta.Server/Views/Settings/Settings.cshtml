@model Voxta.Server.ViewModels.Settings.SettingsViewModel
@{
    Layout = "_Layout";
    ViewBag.Title = "Settings";
}

@section head {
    <script src="/scripts/pages/settings/settings-page.js"></script>
}

<div class="container">
    <h1>Settings</h1>
    
    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>Help</h2>
            <button class="btn btn-dark" type="button" data-bs-toggle="collapse" data-bs-target="#collapseHelp" aria-expanded="false" aria-controls="collapseHelp">
                <i class="bi bi-question-circle"></i> General help
            </button>
        </div>
        <div class="card-body collapse" id="collapseHelp">
            <p>To talk with an AI, you need:</p>
            <ul>
                <li>A profile (how the AI will see you)</li>
                <li><code>Text Gen</code> (the ability to "think" and generate a response)</li>
                <li><code>Text To Speech</code>, also known as <code>TTS</code> (the ability to "speak" words)</li>
                <li><code>Speech To Text</code>, also known as <code>STT</code> (the ability to "hear" what you say)</li>
            </ul>
            <p>So, make sure to configure at least one of each.</p>
            <p>Unless you specify a service, the first available AI that matches the requirements will be selected. You can reorder them if you have different preferences.</p>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>
                Profile
            </h2>
            <button class="btn btn-dark btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#collapseHelp_profile" aria-expanded="false" aria-controls="collapseHelp_profile">
                <i class="bi bi-question-circle"></i>
            </button>
        </div>
        <div class="card-body">
            <div class="collapse" id="collapseHelp_profile">
                <p>Your profile defines how the AI will see you and call you.</p>
            </div>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th scope="col" style="width: 80px;">Status</th>
                    <th scope="col">Message</th>
                    <th scope="col" style="width: 80px;"></th>
                </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @if (Model.Profile != null)
                            {
                                <i class="bi bi-check-circle-fill text-success"></i>
                            }
                            else
                            {
                                <i class="bi bi-exclamation-circle-fill text-danger"></i>
                            }
                        </td>
                        <td>
                            
                            @if (Model.Profile != null)
                            {
                                @Model.Profile.Name
                            }
                            else
                            {
                                <span>Profile not configured</span>
                            }
                        </td>
                        <td class="text-end">
                            <div class="d-inline-flex">
                                <a class="btn btn-sm btn-secondary" href="/settings/profile">Configure</a>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>
                Services
            </h2>
            <button class="btn btn-dark btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#collapseHelp_services" aria-expanded="false" aria-controls="collapseHelp_services">
                <i class="bi bi-question-circle"></i>
            </button>
        </div>
        <div class="card-body">
            <div class="collapse" id="collapseHelp_services">
                <p>Services are where your AI runs, including text generation, text to speech, and speech to text.</p>
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col" style="width: 40%;">Service</th>
                        <th scope="col">Label</th>
                        <th scope="col" style="width: 80px;">
                            @if(Model.Services.Any(x => x.Service.Enabled && x.Definition.TextGen)) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }
                            <span title="Text Generation (Replies, Summarization and Action Inference)">TXT</span>
                        </th>
                        <th scope="col" style="width: 80px;">
                            @if(Model.Services.Any(x => x.Service.Enabled && x.Definition.TTS)) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }
                            <span title="Text To Speech (Synthesizer)">TTS</span>
                        </th>
                        <th scope="col" style="width: 80px;">
                            @if(Model.Services.Any(x => x.Service.Enabled && x.Definition.STT)) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }
                            <span title="Speech To Text (Transcription)">STT</span>
                        </th>
                        <th scope="col" style="width: 80px;"></th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var s in Model.Services)
                {
                    <tr>
                        <td>
                            @s.Definition.Label
                        </td>
                        <td>
                            @s.Service.Label
                        </td>
                        @if(s.Service.Enabled)
                        {
                            <td>@if(s.Definition.TextGen) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }</td>
                            <td>@if(s.Definition.TTS) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }</td>
                            <td>@if(s.Definition.STT) { <i class="bi bi-check-circle-fill text-success"></i> } else { <i class="bi bi-dash-circle-fill text-secondary"></i> }</td>
                        }
                        else
                        {
                            <td colspan="3" class="text-center"><span class="text-muted">Disabled</span></td>
                        }
                        <td class="text-end">
                            <div class="d-inline-flex">
                                <a class="btn btn-sm btn-secondary" href="/settings/@s.Definition.ServiceName.ToLowerInvariant()/@s.Service.Id">Configure</a>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <div class="card-footer text-center">
            <a class="btn btn-secondary" href="/settings/add"><i class="bi bi-plus"></i> Add services</a>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>
                Service Ordering
            </h2>
            <button class="btn btn-dark btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#collapseHelp_ordering" aria-expanded="false" aria-controls="collapseHelp_ordering">
                <i class="bi bi-question-circle"></i>
            </button>
        </div>
        <div class="card-body">
            <div class="collapse" id="collapseHelp_ordering">
                <p>When resolving which AI service to use, some conditions will be checked, such as whether the service is enabled, supports nsfw content, the language of the selected character, or whether it is capable enough. For example, if you select OpenAI first, but try to use a NSFW character, the second service will be used, etc.</p>
            </div>
            
            @foreach (var serviceType in Model.ServiceTypes)
            {
                <partial name="Settings/_ServiceSelector" model="@serviceType"/>
            }
        </div>
    </div>
    
    <div class="card mb-3">
        <div class="card-header">
            <h2>Test</h2>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-center text-center">
                <form asp-action="TestAllSettings" asp-controller="Diagnostics">
                    <input type="hidden" name="test" value="true"/>
                    <p class="text-muted pl-2">Click once and wait for the results, it may take some time.</p>
                    <p><button id="testBtn" type="submit" class="btn btn-primary"><i class="bi bi-journal-check"></i> Test Now</button></p>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
  document.getElementById('testBtn').addEventListener('click', function() {
      setTimeout(() => this.disabled = true, 1);
  });
</script>