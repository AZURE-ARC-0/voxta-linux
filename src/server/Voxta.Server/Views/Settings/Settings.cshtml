@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SettingsViewModel
@{
    Layout = "_Layout";
    ViewBag.Title = "Settings";
}


@section styles {
    <style>
        .tooltip2 {
          position: relative;
          display: inline-block;
          cursor: pointer;
          border-bottom: 1px dotted black; /*optional, to indicate a tooltip is available */
        }
        
        .tooltip2 .tooltip-text {
          visibility: hidden;
          width: 60vw;
          background-color: #555;
          color: #fff;
          text-align: left;
          padding: 5px;
          border-radius: 6px;
          
          /* Positioning */
          position: absolute;
          z-index: 1;
          bottom: 100%; 
          left: -50%;
        
          /* Fade-in effect */
          opacity: 0;
          transition: opacity 0.3s;
        }
        
        .tooltip2:hover .tooltip-text {
          visibility: visible;
          opacity: 1;
        }
    </style>
}

<div class="container">
    <h1>Settings</h1>
    
    <div class="card mb-3">
        <div class="card-header">
            <h2>Help</h2>
        </div>
        <div class="card-body">
            <p>To talk with an AI, you need:</p>
            <ul>
                <li><code>Text Gen</code> (the ability to "think" and generate a response)</li>
                <li><code>Text To Speech</code>, or <code>TTS</code> (the ability to "speak" words)</li>
                <li><code>Speech To Text</code>, or <code>STT</code> (the ability to "hear" what you say)</li>
            </ul>
            <p>So, make sure to configure at least one of each.</p>
            <p>Some recommendations:</p>
            <ul>
                <li>For fast and natural speech, use NovelAI for both Text Gen and TTS.</li>
                <li>For a helpful AI that knows things and can really help with questions, use OpenAI for Text Gen. GPT-4 is very good, but also much slower and more expensive.</li>
                <li>For unrestricted chat, use Text Generation Web UI or KoboldAI for TextGen. You need to host them yourself or on RunPod.io (or another host), and they are more complicated to setup, but they won't cost you anything and they can run completely locally.</li>
                <li>For better but slower audio, or for non-english speech, use ElevenLabs. Azure Speech Service is slightly faster but not as good.</li>
                <li>For much better STT, use Azure Speech Service.</li>
            </ul>
        </div>
    </div>
    
    <div class="card mb-4">
        <div class="card-header">
            <h2>Services</h2>
        </div>
        @if (Model.Services != null)
        {
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th scope="col">Status</th>
                        <th scope="col">Service</th>
                        <th scope="col">Message</th>
                        <th scope="col">Configuration</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var s in Model.Services)
                    {
                        <tr>
                            <td>
                                @if (!s.IsReady)
                                {
                                    <i class="bi bi-dash-circle-fill text-secondary"></i>
                                }
                                else if (s.IsHealthy)
                                {
                                    <i class="bi bi-check-circle-fill text-success"></i>
                                }
                                else
                                {
                                    <i class="bi bi-exclamation-circle-fill text-danger"></i>
                                }
                            </td>
                            <td>@s.Label</td>
                            <td>
                                @if (s.IsTested || s is { IsReady: true,IsHealthy: false })
                                {
                                    <code class="tooltip2">
                                        @s.Status
                                        @if (!string.IsNullOrEmpty(s.Details))
                                        {
                                            <span class="tooltip-text"><pre>@s.Details.Trim()</pre></span>
                                        }
                                    </code>
                                }
                                else if (!s.IsReady)
                                {
                                    <span class="text-muted">Not configured</span>
                                }
                                else
                                {
                                    <span>Ready</span>
                                }
                            </td>
                            <td>
                                <a class="btn btn-sm btn-secondary" href="/settings/@s.ServiceName.ToLower()">Configure</a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        <div class="card-footer">
            <div class="d-flex justify-content-center text-center">
                <form asp-action="TestAllSettings">
                    <input type="hidden" name="test" value="true"/>
                    <p class="text-muted pl-2">Click once and wait for the results, it may take some time.</p>
                    <p><button type="submit" class="btn btn-primary">Test Now</button></p>
                </form>
            </div>
        </div>
    </div>
</div>