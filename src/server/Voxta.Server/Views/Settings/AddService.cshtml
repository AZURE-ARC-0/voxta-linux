@using Voxta.Abstractions.Services
@model Voxta.Server.ViewModels.Settings.AddServiceViewModel
@{
    Layout = "_Layout";
    ViewBag.Title = "Settings - Add Service";
}

<div class="container">
    <h1>Add Service</h1>
    
    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2>Help</h2>
            <button class="btn btn-dark" type="button" data-bs-toggle="collapse" data-bs-target="#collapseHelp" aria-expanded="false" aria-controls="collapseHelp">
                <i class="bi bi-question-circle"></i> General help
            </button>
        </div>
        <div class="card-body">
            <p>The first available service of each category with the required features for the character (e.g. multilingual, nsfw) will be used.</p>
            <div class="collapse" id="collapseHelp">
                <p>To talk with an AI, you need:</p>
                <ul>
                    <li><code>Text Gen</code> (the ability to "think" and generate a response)</li>
                    <li><code>Text To Speech</code>, also known as <code>TTS</code> (the ability to "speak" words)</li>
                    <li><code>Speech To Text</code>, also known as <code>STT</code> (the ability to "hear" what you say)</li>
                </ul>
                <p>So, make sure to configure at least one of each.</p>
                <p>Unless you specify a service, the first available AI that matches the requirements will be selected. You can reorder them if you have different preferences.</p>
                <p>Text Gen usually include those capabilities:</p>
                <ul>
                    <li><code>Reply</code> (talk to you)</li>
                    <li><code>Action Inference</code> (the ability to "infer" actions the AI can do from the conversation)</li>
                    <li><code>Summarization</code> (remember information in longer conversations)</li>
                </ul>
            </div>
        </div>
    </div>
    
    <div class="card mb-3">
        <div class="card-header">
            <h2>Readiness</h2>
        </div>
        <div class="card-body">
            <p>At least one service of each type must be configured and enabled.</p>
            <ul class="list-unstyled">
                <li>
                    <partial name="Settings/_ServiceQuality" model="@Model.Services.Where(x => x.EnabledOccurrences > 0).DefaultIfEmpty().Max(x => x?.Definition.TextGen ?? ServiceDefinitionCategoryScore.NotSupported)"/>
                    Text Generation (Replies, Summarization and Action Inference) support
                </li>
                <li>
                    <partial name="Settings/_ServiceQuality" model="@Model.Services.Where(x => x.EnabledOccurrences > 0).DefaultIfEmpty().Max(x => x?.Definition.TTS ?? ServiceDefinitionCategoryScore.NotSupported)"/>
                    Text To Speech (Synthesizer) support
                </li>
                <li>
                    <partial name="Settings/_ServiceQuality" model="@Model.Services.Where(x => x.EnabledOccurrences > 0).DefaultIfEmpty().Max(x => x?.Definition.STT ?? ServiceDefinitionCategoryScore.NotSupported)"/>
                    Speech To Text (Transcription) support
                </li>
                <li>
                    @if (Model.Services.Any(s => s.Definition.Features.Contains(ServiceFeatures.NSFW) && s.EnabledOccurrences > 0))
                    {
                        <i class="bi bi-check-circle-fill text-success"></i>
                    }
                    else
                    {
                        <i class="bi bi-dash-circle-fill text-secondary"></i>
                    }
                    NSFW (Not Safe For Work) support
                </li>
            </ul>
        </div>
    </div>
    
    <div class="card mb-3">
        <div class="card-header">
            <h2>Available Services</h2>
        </div>
        <div class="card-body">
            <div class="row">
            @foreach (var s in Model.Services)
            {
                <div class="col-sm-4 d-flex align-items-stretch">
                    <div class="card mb-3" style="width: 100%">
                        <div class="card-body">
                            <h3>@s.Definition.Label</h3>
                            @switch (s.Occurrences)
                            {
                                case 1:
                                    <p class="text-muted">Already added.</p>
                                    break;
                                case > 1:
                                    <p class="text-muted">Configured @s.Occurrences times.</p>
                                    break;
                            }
                            <ul class="list-unstyled">
                                <li>
                                    <partial name="Settings/_ServiceQuality" model="@s.Definition.TextGen" />
                                    Text Generation
                                </li>
                                <li>
                                    <partial name="Settings/_ServiceQuality" model="@s.Definition.TTS"/>
                                    Text To Speech
                                </li>
                                <li>
                                    <partial name="Settings/_ServiceQuality" model="@s.Definition.STT" />
                                    Speech To Text
                                </li>
                                @foreach(var  feature in s.Definition.Features)
                                {
                                    <li>
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                        @feature.ToUpper() support
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="card-footer text-end">
                            <a href="/settings/@s.Definition.ServiceName.ToLowerInvariant()/@Guid.Empty" class="btn btn-@(s.Occurrences > 0 ? "secondary" : "primary")" title="Configure this service"><i class="bi bi-plus"></i> @(s.Occurrences == 0 ? "Create" : "Add")</a>
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-end mt-3">
        <a href="/settings" class="btn btn-secondary me-2">Back to settings</a>
    </div>
</div>
