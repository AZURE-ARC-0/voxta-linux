@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Voxta.Server.ViewModels.Playground.TextToSpeechPlaygroundViewModel
@{
    Layout = "_Layout";
    ViewBag.Title = "Playground - Text To Speech";
}

<div class="container">
    <h1>Text To Speech Playground</h1>

    <div class="card mb-3">
        <div class="card-body">
            <div class="mb-2">
                <label for="speechTestService">Service</label>
                <select id="speechTestService" asp-items="@(new SelectList(Model.Services, nameof(OptionViewModel.Name), nameof(OptionViewModel.Label)))" class="form-select"></select>
                <div class="form-text">Make sure the services has been configured and enabled.</div>
            </div>
            <div class="mb-2">
                <label for="speechTestCulture">Culture</label>
                <select id="speechTestCulture" asp-items="@(new SelectList(Model.Cultures, nameof(OptionViewModel.Name), nameof(OptionViewModel.Label), "en-US"))" class="form-control"></select>
            </div>
            <div class="mb-2">
                <label for="speechTestVoice">Voice</label>
                <select id="speechTestVoice" class="form-select"></select>
                <div class="form-text">Only a subset of voices are displayed.</div>
            </div>
            <div class="mb-2">
                <label for="speechTestText">Test speech</label>
                <input type="text" id="speechTestText" value="I am Voxta, your AI companion." class="form-control"/>
                <div class="form-text">Save your changes before testing.</div>
            </div>
        </div>
        <div class="card-footer text-center">
            <button class="btn btn-secondary" id="speechTestButton"><i class="bi bi-play"></i> Play speech</button>
        </div>
    </div>
</div>

<script>
    const service = document.getElementById("speechTestService");
    const culture = document.getElementById("speechTestCulture");
    const voice = document.getElementById("speechTestVoice");
    const text = document.getElementById("speechTestText");
    
    let audio = null;
    
    document.getElementById("speechTestButton").addEventListener("click", ev => {
        if (audio) {
            audio.pause();
            audio = null;
        }
        if (text.length === 0) { return; }
        audio = new Audio(`/tts/services/${service.value}/speak?culture=${encodeURIComponent(culture.value)}&voice=${encodeURIComponent(voice.value)}&text=${encodeURIComponent(text.value)}`);
        audio.addEventListener("error", ev => {
            alert("An error occurred while playing the speech: " + ev.message);
        });
        audio.play();
    });
    
    async function loadVoices() {
        voice.innerHTML = "";
        const response = await fetch('/tts/services/' + service.value + '/voices?culture=en-US');
        const data = await response.json();
        
        voice.innerHTML = '';
        
        for (let item of data) {
            const option = document.createElement("option");
            option.value = item.id;
            option.text = item.label;
            voice.add(option);
        }
    }

    service.addEventListener("change", () => {
        loadVoices();
    });

    culture.addEventListener("change", () => {
        loadVoices();
    });

    window.addEventListener("load", () => {
        loadVoices();
    });
</script>
